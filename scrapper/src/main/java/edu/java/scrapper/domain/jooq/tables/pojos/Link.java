/*
 * This file is generated by jOOQ.
 */

package edu.java.scrapper.domain.jooq.tables.pojos;

import jakarta.validation.constraints.Size;
import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class Link implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String url;
    private OffsetDateTime updatedAt;
    private OffsetDateTime checkedAt;
    private String type;
    private Integer answerCount;
    private Integer commentCount;
    private Integer pullRequestCount;
    private Integer commitCount;

    public Link() {
    }

    public Link(Link value) {
        this.id = value.id;
        this.url = value.url;
        this.updatedAt = value.updatedAt;
        this.checkedAt = value.checkedAt;
        this.type = value.type;
        this.answerCount = value.answerCount;
        this.commentCount = value.commentCount;
        this.pullRequestCount = value.pullRequestCount;
        this.commitCount = value.commitCount;
    }

    @ConstructorProperties({"id", "url", "updatedAt", "checkedAt", "type", "answerCount", "commentCount",
        "pullRequestCount", "commitCount"})
    public Link(
        @Nullable Long id,
        @NotNull String url,
        @Nullable OffsetDateTime updatedAt,
        @Nullable OffsetDateTime checkedAt,
        @NotNull String type,
        @Nullable Integer answerCount,
        @Nullable Integer commentCount,
        @Nullable Integer pullRequestCount,
        @Nullable Integer commitCount
    ) {
        this.id = id;
        this.url = url;
        this.updatedAt = updatedAt;
        this.checkedAt = checkedAt;
        this.type = type;
        this.answerCount = answerCount;
        this.commentCount = commentCount;
        this.pullRequestCount = pullRequestCount;
        this.commitCount = commitCount;
    }

    /**
     * Getter for <code>public.link.id</code>.
     */
    @Nullable
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.link.id</code>.
     */
    public void setId(@Nullable Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.link.url</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>public.link.url</code>.
     */
    public void setUrl(@NotNull String url) {
        this.url = url;
    }

    /**
     * Getter for <code>public.link.updated_at</code>.
     */
    @Nullable
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.link.updated_at</code>.
     */
    public void setUpdatedAt(@Nullable OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.link.checked_at</code>.
     */
    @Nullable
    public OffsetDateTime getCheckedAt() {
        return this.checkedAt;
    }

    /**
     * Setter for <code>public.link.checked_at</code>.
     */
    public void setCheckedAt(@Nullable OffsetDateTime checkedAt) {
        this.checkedAt = checkedAt;
    }

    /**
     * Getter for <code>public.link.type</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 63)
    @NotNull
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>public.link.type</code>.
     */
    public void setType(@NotNull String type) {
        this.type = type;
    }

    /**
     * Getter for <code>public.link.answer_count</code>.
     */
    @Nullable
    public Integer getAnswerCount() {
        return this.answerCount;
    }

    /**
     * Setter for <code>public.link.answer_count</code>.
     */
    public void setAnswerCount(@Nullable Integer answerCount) {
        this.answerCount = answerCount;
    }

    /**
     * Getter for <code>public.link.comment_count</code>.
     */
    @Nullable
    public Integer getCommentCount() {
        return this.commentCount;
    }

    /**
     * Setter for <code>public.link.comment_count</code>.
     */
    public void setCommentCount(@Nullable Integer commentCount) {
        this.commentCount = commentCount;
    }

    /**
     * Getter for <code>public.link.pull_request_count</code>.
     */
    @Nullable
    public Integer getPullRequestCount() {
        return this.pullRequestCount;
    }

    /**
     * Setter for <code>public.link.pull_request_count</code>.
     */
    public void setPullRequestCount(@Nullable Integer pullRequestCount) {
        this.pullRequestCount = pullRequestCount;
    }

    /**
     * Getter for <code>public.link.commit_count</code>.
     */
    @Nullable
    public Integer getCommitCount() {
        return this.commitCount;
    }

    /**
     * Setter for <code>public.link.commit_count</code>.
     */
    public void setCommitCount(@Nullable Integer commitCount) {
        this.commitCount = commitCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Link other = (Link) obj;
        if (this.id == null) {
            if (other.id != null) {
                return false;
            }
        } else if (!this.id.equals(other.id)) {
            return false;
        }
        if (this.url == null) {
            if (other.url != null) {
                return false;
            }
        } else if (!this.url.equals(other.url)) {
            return false;
        }
        if (this.updatedAt == null) {
            if (other.updatedAt != null) {
                return false;
            }
        } else if (!this.updatedAt.equals(other.updatedAt)) {
            return false;
        }
        if (this.checkedAt == null) {
            if (other.checkedAt != null) {
                return false;
            }
        } else if (!this.checkedAt.equals(other.checkedAt)) {
            return false;
        }
        if (this.type == null) {
            if (other.type != null) {
                return false;
            }
        } else if (!this.type.equals(other.type)) {
            return false;
        }
        if (this.answerCount == null) {
            if (other.answerCount != null) {
                return false;
            }
        } else if (!this.answerCount.equals(other.answerCount)) {
            return false;
        }
        if (this.commentCount == null) {
            if (other.commentCount != null) {
                return false;
            }
        } else if (!this.commentCount.equals(other.commentCount)) {
            return false;
        }
        if (this.pullRequestCount == null) {
            if (other.pullRequestCount != null) {
                return false;
            }
        } else if (!this.pullRequestCount.equals(other.pullRequestCount)) {
            return false;
        }
        if (this.commitCount == null) {
            if (other.commitCount != null) {
                return false;
            }
        } else if (!this.commitCount.equals(other.commitCount)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.checkedAt == null) ? 0 : this.checkedAt.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.answerCount == null) ? 0 : this.answerCount.hashCode());
        result = prime * result + ((this.commentCount == null) ? 0 : this.commentCount.hashCode());
        result = prime * result + ((this.pullRequestCount == null) ? 0 : this.pullRequestCount.hashCode());
        result = prime * result + ((this.commitCount == null) ? 0 : this.commitCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Link (");

        sb.append(id);
        sb.append(", ").append(url);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(checkedAt);
        sb.append(", ").append(type);
        sb.append(", ").append(answerCount);
        sb.append(", ").append(commentCount);
        sb.append(", ").append(pullRequestCount);
        sb.append(", ").append(commitCount);

        sb.append(")");
        return sb.toString();
    }
}
